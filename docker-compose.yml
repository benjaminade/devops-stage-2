version: '3'

services:
  frontend:
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(/)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://postgres:changeam@db:5432/postgres_db
      - PROJECT_NAME=${PROJECT_NAME}
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(/api) || PathPrefix(/docs)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=PathPrefix(/adminer)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8888"
    ports:
      - "8888:8888"
      - "8889:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data: